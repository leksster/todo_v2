.project{'ng-if'=>'showData','ng-repeat'=>"project in projects | orderBy: '-created_at'"}
  .row.title-box
    .hidden-xs.note-box
      = image_tag('icon-note.fw.png')
    .col-xs-10.col-sm-10
      %span{'editable-text'=>'project.name', 'e-form'=>'editProject', 'onaftersave'=>'updateProject(project)', 'name'=>"project", 'id' => "{{ $index }}"}
        {{ project.name }}
    .col-xs-2.col-sm-2
      %ul.list-inline.top-icons.pull-right.hide
        %li
          %a{'ng-click'=>'editProject.$show()', 'ng-hide'=>'editProject.$visible'} 
            = image_tag('icon-pensil-top.fw.png')
        %li
          %a{'ng-click'=>'removeProject(project)'}
            = image_tag('icon-trash-top.fw.png')
  %todo_project_tasks
  / .content{'ng-controller'=>'TaskController'}
  /   .row.form-box
  /     .hidden-xs.note-box
  /       = image_tag('icon-plus.fw.png', class: "icon-plus")
  /     .col-xs-12.col-sm-12
  /       %form{:name=>'taskForm', :novalidate=>''}
  /         .input-group
  /           %input.form-control{type: 'text', placeholder: 'Start typing here to create a task...', 'ng-model' => 'newTask', required: ''}
  /           %span.input-group-btn
  /             %button.btn.btn-default.datepick{type: 'button', 'ng-click'=>'addDeadline()'}
  /               %span.glyphicon.glyphicon-calendar
  /               {{deadline.date | date : format : timezone}}
  /             %button.btn.btn-default.submit{type: 'submit', 'ng-click' => 'createTask(project)'}
  /               Add Task

  /   .sort{'data-as-sortable'=>'dragControlListeners', 'data-ng-model'=>'project.tasks'}
  /     .tasks{'ng-repeat'=>"task in project.tasks", 'data-as-sortable-item'=>''}
  /       .row.content-box{'data-as-sortable-item-handle'=>''}
  /         .check-box
  /           %input{type: 'checkbox', 'ng-model'=>'done.value', 'ng-click'=>'markTask(project, task, done.value)', 'ng-checked'=>'task.done'}
  /         .divider
  /         .col-xs-10.content-text
  /           %span.label.label-warning.pull-right{'ng-show'=>'task.deadline || task.comments.length'}
  /             %span{'ng-show'=>'task.deadline', 'ng-click'=>'editTask(project, task)'}
  /               due to: {{ task.deadline | date : format : timezone }}  
  /             %span{'ng-show'=>'task.comments.length', 'ng-click'=>'$parent.showComments=!$parent.showComments'}
  /               %span.glyphicon.glyphicon-comment
  /               {{ task.comments.length }}
  /           %a{'ng-click'=>'$parent.showComments=!$parent.showComments'}
  /             {{ task.text }}

      
  /         .col-xs-2.icons-edit
  /           %ul.list-inline.hide
  /             %li
  /               = image_tag('icon-up-down-item.fw.png')
  /             %li
  /               %a{'ng-click'=>'editTask(project, task)'}
  /                 = image_tag('icon-pensil-item.fw.png')
  /             %li
  /               %a{'ng-click'=>'removeTask(task)'}
  /                 = image_tag('icon-trash-item.fw.png')

  /       .comments{'ng-controller'=> 'CommentController', 'ng-show'=>'showComments'}
  /         .row
  /           .col-xs-12
  /             %h6
  /               Comments: 
  /             %hr
  /         .row{'ng-repeat'=> 'comment in task.comments | orderBy: "id"'}
  /           .col-xs-12        
  /             %blockquote
  /               %p{'editable-text'=>'comment.text', 'e-form'=>'editComment', 'onaftersave'=>'updateComment(project, task, comment)'} 
  /                 {{ comment.text }}
  /                 %span.pull-right.delete.hide
  /                   %a{'ng-click'=>'removeComment(project, task, comment)'}
  /                     = image_tag('icon-trash-item.fw.png')                        
  /                 %span.pull-right.delete.hide
  /                   %a{'ng-click'=>'editComment.$show()', 'ng-hide'=>'editComment.$visible'}
  /                     = image_tag('icon-pensil-item.fw.png')
  /                 %span.pull-right.date
  /                   {{ comment.created_at | date : format : timezone }}
  /               %p{'ng-repeat'=>'attach in comment.attaches'} 
  /                 %a{'ng-href' => '{{ attach.file.url }}' }
  /                   {{ urlToName(attach.file.url) }}
  /             %hr
                

  /         .row
  /           .col-xs-12{'ng-controller'=>'UploadCtrl'}
  /             %form{'name'=>'uploadForm'}
  /               .row
  /                 .form-group
  /                   %input.form-control{type:'text', placeholder: 'Comment text...', :autofocus=>'', 'ng-model'=> 'newCommentText'}
  /               .row
  /                 .form-group
  /                   %span.btn.btn-default.btn-file
  /                     %input.filestyle{type: 'file', 'ngf-select'=>'', 'ng-model'=>'file', 'ngf-max-size'=>'30MB', 'ngf-model-invalid'=>'errorFile'}
  /                       Attach file
  /                     %i{'ng-show'=>'uploadForm.file.$error.maxSize'} File too large {{errorFile.size/ 1000000|number:1}}MB: max 2M
  /                   {{ file.name }}

  /                   %img{'ng-show'=>'uploadForm.file.$valid', 'ngf-thumbnail'=>'file', 'class'=>'thumb'}
  /                   %button.btn.btn-danger{type: 'button', 'ng-show'=>'file', 'ng-click'=>'file = null'}
  /                     Remove
  /               .row
  /                 .form-group
  /                   %span.progress{'ng-show'=>'file.progress >= 0'}
  /                     %div{'style'=>'width: {{file.progress}}%', 'ng-bind'=>'file.progress + "%"'}
  /                   %span{'ng-show'=>'file.result'}Upload Successfuel
  /                   %span.err{'ng-show'=>'errorMsg'}{{errorMsg}}

  /                   %button.btn.btn-primary.submit{type: 'submit', 'ng-click' => 'uploadPic(file, task, project)'}                  
  /                     Add Comment